import logging
import sys
from datetime import datetime

from clickhouse_client import ClickHouseClient
from evidently_client import EvidentlyClient
from config import Config

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler(sys.stdout)]
)
logger = logging.getLogger(__name__)

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üîß Creating Reference Dataset")
    print("=" * 30)
    
    # –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    errors = []
    if not Config.EVIDENTLY_API_KEY:
        errors.append("EVIDENTLY_API_KEY is required")
    if Config.REFERENCE_MIN_CONFIDENCE < 0 or Config.REFERENCE_MIN_CONFIDENCE > 1:
        errors.append("REFERENCE_MIN_CONFIDENCE must be between 0 and 1")
    if Config.REFERENCE_LIMIT <= 0:
        errors.append("REFERENCE_LIMIT must be positive")
        
    if errors:
        print("‚ùå Configuration errors:")
        for error in errors:
            print(f"   ‚Ä¢ {error}")
        sys.exit(1)
    
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç–∏
        ch_client = ClickHouseClient()
        ev_client = EvidentlyClient()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ ClickHouse
        if not ch_client.test_connection():
            raise Exception("ClickHouse connection failed")
        
        # –û—Ç—Ä–∏–º—É—î–º–æ reference –¥–∞–Ω—ñ
        logger.info("Fetching reference data from ClickHouse...")
        reference_df = ch_client.get_reference_dataset()
        
        if reference_df.empty:
            raise Exception(f"No reference data found. Need {Config.REFERENCE_LIMIT} records with "
                          f"class='{Config.REFERENCE_CLASS_NAME}' and confidence > {Config.REFERENCE_MIN_CONFIDENCE}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ/–æ—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–µ–∫—Ç –≤ Evidently
        project = ev_client.create_or_get_project()
        
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ reference –¥–∞—Ç–∞—Å–µ—Ç
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        dataset_name = f"Reference Dataset {timestamp}"
        description = (f"Reference dataset: {Config.REFERENCE_LIMIT} {Config.REFERENCE_CLASS_NAME} "
                      f"objects with confidence > {Config.REFERENCE_MIN_CONFIDENCE}. "
                      f"Created: {datetime.now().isoformat()}")
        
        logger.info(f"Uploading reference dataset to Evidently Cloud...")
        dataset_id = ev_client.upload_dataset(reference_df, dataset_name, description)
        
        print("‚úÖ Reference dataset created!")
        print(f"üìä Dataset ID: {dataset_id}")
        print(f"üí° Set: export REFERENCE_DATASET_ID={dataset_id}")
        
        return dataset_id
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        logger.error(f"Failed to create reference dataset: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 